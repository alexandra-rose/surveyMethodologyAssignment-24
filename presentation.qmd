---
title: "Group presentation"
date: 2024-01-24
author: "Frederick, Sofia, Alex"
format: 
  revealjs:
    theme: simple
    transition: slide
    transition-speed: fast
    embed-resources: TRUE
    slide-number: c/t
editor: visual
logo: https://www.rstudio.com/wp-content/uploads/2018/10/RStudio-Logo-Flat.png
---

## Data cleaning- test test

-   Cleaning data

-   Tidy data

-   Joining datasets

```{r Data cleaning}
#| echo: false
library(haven)
library(readr)
library(haven) 
library(writexl)
library(sjlabelled)
library(tidyverse)
library(corrplot)
library(dplyr)
library(gmodels)
library(scales)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
library(ggplot2)
library(leaflet)
library(tidyverse)
library(MASS)
library(caret)
library(plotly)
library(car)
library(caret)
library(rpart)
library(rpart.plot)
library(lme4)
library(pROC)
library(caret)
library(pdp)
library(Matrix)
library(lattice)


data <- read_dta("Data/ZA7575.dta")

data_cleaning_1 <- data %>%
  select(
         -c(studyno1, studyno2, doi, version, edition,survey))

data_cleaning_2 <- data_cleaning_1 %>% 
  select(serialid, everything())

# creating a variable for country name to be more organized
data_cleaning_2$country_name <- NA
data_cleaning_2$country_name[data_cleaning_2$q1_1 == 1] <- 'Belgium'
data_cleaning_2$country_name[data_cleaning_2$q1_2 == 1] <- 'Denmark'
data_cleaning_2$country_name[data_cleaning_2$q1_3 == 1] <- 'Germany'
data_cleaning_2$country_name[data_cleaning_2$q1_4 == 1] <- 'Greece'
data_cleaning_2$country_name[data_cleaning_2$q1_5 == 1] <- 'Spain'
data_cleaning_2$country_name[data_cleaning_2$q1_6 == 1] <- 'France'
data_cleaning_2$country_name[data_cleaning_2$q1_7 == 1] <- 'Ireland'
data_cleaning_2$country_name[data_cleaning_2$q1_8 == 1] <- 'Italy'
data_cleaning_2$country_name[data_cleaning_2$q1_9 == 1] <- 'Luxembourg'
data_cleaning_2$country_name[data_cleaning_2$q1_10 == 1] <- 'Netherlands'
data_cleaning_2$country_name[data_cleaning_2$q1_11 == 1] <- 'Portugal'
data_cleaning_2$country_name[data_cleaning_2$q1_12 == 1] <- 'United Kingdom'
data_cleaning_2$country_name[data_cleaning_2$q1_13 == 1] <- 'Austria'
data_cleaning_2$country_name[data_cleaning_2$q1_14 == 1] <- 'Sweden'
data_cleaning_2$country_name[data_cleaning_2$q1_15 == 1] <- 'Finland'
data_cleaning_2$country_name[data_cleaning_2$q1_16 == 1] <- 'Cyprus'
data_cleaning_2$country_name[data_cleaning_2$q1_17 == 1] <- 'Czech Republic'
data_cleaning_2$country_name[data_cleaning_2$q1_18 == 1] <- 'Estonia'
data_cleaning_2$country_name[data_cleaning_2$q1_19 == 1] <- 'Hungary'
data_cleaning_2$country_name[data_cleaning_2$q1_20 == 1] <- 'Latvia'
data_cleaning_2$country_name[data_cleaning_2$q1_21 == 1] <- 'Lithuania'
data_cleaning_2$country_name[data_cleaning_2$q1_22 == 1] <- 'Malta'
data_cleaning_2$country_name[data_cleaning_2$q1_23 == 1] <- 'Poland'
data_cleaning_2$country_name[data_cleaning_2$q1_24 == 1] <- 'Slovakia'
data_cleaning_2$country_name[data_cleaning_2$q1_25 == 1] <- 'Slovenia'
data_cleaning_2$country_name[data_cleaning_2$q1_26 == 1] <- 'Bulgaria'
data_cleaning_2$country_name[data_cleaning_2$q1_27 == 1] <- 'Romania'
data_cleaning_2$country_name[data_cleaning_2$q1_28 == 1] <- 'Croatia'
data_cleaning_2$country_name[data_cleaning_2$q1_29 == 1] <- 'Other countries'
data_cleaning_2$country_name[data_cleaning_2$q1_30 == 1] <- 'DK'

# factor
data_cleaning_2$country_name <- factor(data_cleaning_2$country_name)

Data_Extra_by_Country <- read_delim("data_extra_by_Country.csv", 
    delim = ";", escape_double = FALSE, trim_ws = TRUE)

all_na_columns <- sapply(Data_Extra_by_Country, function(x) all(is.na(x)))

# There are columns with all NA due to the filtering in stata done before for the year 2019.

columns_to_remove <- names(Data_Extra_by_Country)[all_na_columns]

# remove the columns
Data_Extra_by_Country <- Data_Extra_by_Country[, !all_na_columns]
Data_Extra_by_Country <- Data_Extra_by_Country[, !names(Data_Extra_by_Country) %in% "e_polity2"]

# dataframe of all the variables for 2019 related to legal or political views of most of the countries in the world

Data_Extra_by_Country$country_name <- factor(Data_Extra_by_Country$country_name)

Data_Extra_by_Country <- Data_Extra_by_Country %>% 
  select(country_name,adp_general)

merged_df_1 <- merge(data_cleaning_2, Data_Extra_by_Country, by = "country_name", all.x = TRUE)

Eco_Extra_Data <- read_delim("Eco Extra Data.csv", 
    delim = ";", escape_double = FALSE, trim_ws = TRUE) 

merged_df <- merge(merged_df_1, Eco_Extra_Data, by = "country_name", all.x = TRUE)

df_descriptive <- merged_df
```

## Feature selection {style="font-size: 100%;"}

```         
-   Campbell, M., Hinton, J. D. X. & Anderson, J. R. (2019) A systematic review of the relationship between religion and attitudes toward transgender and gender-variant people. International Journal of Transgenderism, 20:1, 21-38, DOI: 10.1080/15532739.2018.1545149
-   Earle, M. et al. (2021). A multilevel analysis of LGBT (Lesbian, Gay, Bisexual, Transgender) rights support across 77 countries: The role of contact and country laws . British Journal of Social Psychology. doi:10.1111/bjso.12436
-   Flores, A. R. (2015) Attitudes toward transgender rights: perceived knowledge and secondary interpersonal contact, Politics, Groups, and Identities, 3:3, 398-416, DOI: 10.1080/21565503.2015.1050414-
-   Flores, A. R., Brown, T. N. T., & Park, A. S. (2016). Public Support for Transgender Rights: A Twenty-three Country Survey. The Williams Institute at UCLA School of Law. <http://www.jstor.org/stable/resrep34965->
-   Harrison, B.F., Michelson, M.R. (2019) Gender, Masculinity Threat, and Support for Transgender Rights: An Experimental Study. Sex Roles 80, 63–75. <https://doi.org/10.1007/s11199-018-0916-6>
-   Norton, A.T., Herek, G.M. (2013) Heterosexuals’ Attitudes Toward Transgender People: Findings from a National Probability Sample of U.S. Adults. Sex Roles 68, 738–753.
```

## Descriptive Analysis

```{r}

#| echo: false

df_descriptive$qc19_multinominal <- factor(df_descriptive$qc19, levels = c(1, 2, 3),labels = c("Yes", "No", "Don't know"))

qc19labels <- c("Yes", "No", "Don't know")
names(qc19labels) <- c(1, 2, 3)
```

```{r}
#| results: 'markup'

df_descriptive |>
  mutate(d10 = as.factor(d10),
         qc19_n = as.numeric(qc19),
         qc19 = as.factor(qc19)) |> 
  group_by(d10) |> 
  mutate(gsumqc19 = sum(qc19_n)) |> 
  ungroup() |> 
  group_by(qc19, d10) |> 
  mutate(gshare19 = (sum(qc19_n)/gsumqc19)*100) |> 
  ungroup() |> 
  ggplot(aes(x = qc19_multinominal, y = gshare19, fill = d10))+
  geom_bar(stat = "identity", position = "dodge")+
  geom_text((aes(label = sprintf("%.1f%%", gshare19))), position = position_dodge(width = 0.9), vjust = -0.3, size = 3) +
  labs(title = "Do you think that transgender persons should be able to change\ntheir civil documents to match their inner gender identity?",
y = NULL,
x = NULL,
caption = "Source: Eurobarometer 91.4") +
  scale_fill_manual(labels = c("Men", "Women"), values = c("blue", "red")) +
  theme_minimal() +
  theme(legend.position = "bottom") +  
  guides(fill = guide_legend(title = NULL)) 
```

## Binary conception of gender

```{r}

#| echo: false

df_descriptive$qc19_multinominal <- factor(df_descriptive$qc19, levels = c(1, 2, 3),labels = c("Yes", "No", "Don't know"))

df_descriptive$qc20_multinominal <- factor(df_descriptive$qc20, levels = c(1, 2, 3),labels = c("Yes", "No", "Don't know"))

plot_binary_1 <-
  df_descriptive |> 
  group_by(country_name) |> 
  summarise(share_no = mean(qc20 == 2, na.rm = TRUE)*100) |> 
  arrange(desc(share_no)) |> 
  mutate(country_name = factor(country_name, levels = country_name)) |>
  filter(country_name != "Otros países") |> 
ggplot(aes(x = country_name, y = share_no)) +
  geom_col(fill = "red") +
  labs(x = "",
       y = "",
       caption = "Source: Eurobarometer 91.4") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
        plot.margin = margin(0, 0, 0, 0))  +
  scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  geom_text((aes(label = sprintf("%.1f%%", share_no))),vjust = -0.5, size = 2)  +
  annotate("text", x = 9.5, y = 70, 
           label = "Share of 'No' responses to qc19:\nDo you think that transgender persons should be able to change\ntheir civil documents to match their inner gender identity?",
           hjust = 0, vjust = 0.5, size = 3, color = "black") +
  geom_rect(aes(xmin = 9.3, xmax = 24.3, 
                ymin = 62, ymax = 77),
                fill = "transparent", color = "black", linewidth = 1)

plot_binary_2 <- 
  df_descriptive |> 
  group_by(country_name) |> 
  summarise(share_no = mean(qc19 == 2, na.rm = TRUE)*100) |> 
  arrange(desc(share_no)) |> 
  mutate(country_name = factor(country_name, levels = country_name)) |>
  filter(country_name != "Otros países") |> 
ggplot(aes(x = country_name, y = share_no)) +
  geom_col(fill = "red") +
  labs(x = "",
       y = "",
       caption = "Source: Eurobarometer 91.4") +
  theme_minimal()+ 
  theme(axis.text.x = element_text(angle = 90, hjust= 0),
        plot.margin = margin(-10, 0, 0, 0)) +
  scale_x_discrete(position = "top") +
  scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  geom_text((aes(label = sprintf("%.1f%%", share_no))), vjust = -0.5, size = 2)  +
  annotate("text", x = 10, y = 65, 
           label = "Share of 'No' responses to qc20:\nDo you believe that official documents, like passports and birth\ncertificates, should have a third option, such as X or O (other)\nbeside male (M) and female (F)for those persons who do not\nidentify as female and male?",
           hjust = 0, vjust = 0.5, size = 3, color = "black") +
  geom_rect(aes(xmin = 9.8, xmax = 24.6, 
                ymin = 53, ymax = 76),
                fill = "transparent", color = "black", linewidth = 1)

```

::: panel-tabset
## Rights

```{r}
#| echo: false

plot_binary_1
```

## Gender binary

```{r}
#| echo: false

plot_binary_2
```

## Association

```{r}
#| echo: true

df_country_1 <- 
  df_descriptive |>
  group_by(country_name) |> 
  summarize(
    prop_gndr_bin = (sum(qc20_multinominal == "Yes") / n())*100, 
    prop_qc19_yes = (sum(qc19 == 1) / n())*100)


cor(df_country_1$prop_gndr_bin, df_country_1$prop_qc19_yes, method = "spearman")
```
:::

## Religiosity

ALEX COPIED EVERYTHING TO GET IT TO RUN \<3

```{r}
#| echo: false

df_descriptive <- merged_df

df_descriptive$qc19_multinominal <- factor(df_descriptive$qc19, levels = c(1, 2, 3),labels = c("Yes", "No", "Don't know"))

qc19labels <- c("Yes", "No", "Don't know")
names(qc19labels) <- c(1, 2, 3)
```

```{r}
#| echo: false

df_descriptive$qc20_multinominal <- factor(df_descriptive$qc20, levels = c(1, 2, 3),labels = c("Yes", "No", "Don't know"))

```

```{r}
#| echo: false

df_country_1 <- 
  df_descriptive |>
  group_by(country_name) |> 
  summarize(
    prop_gndr_bin = (sum(qc20_multinominal == "Yes") / n())*100, # Calculate proportion with high education
    prop_qc19_yes = (sum(qc19 == 1) / n())*100)

```


```{r}
#| echo: false

df_descriptive$d1_ordinal <- factor(df_descriptive$d1, levels = c(1, 2, 3, 4 , 5, 6, 7, 8, 9, 10, 97, 98),labels = c("Left", "2", "3", "4", "5", "6", "7", "8", "9", "Right", "Non-response", "Don't know"))

```

```{r}
#| echo: false

df_descriptive <-
  df_descriptive |> 
  mutate(sd3_cat = case_when(sd3 == 1 ~ "Catholic",
                             sd3 == 2 ~ "Orthodox Christian",
                             sd3 == 3 ~ "Protestant",
                             sd3 == 4 ~ "Other Christian",
                             sd3 == 5 ~ "Jewish",
                             sd3 < 9 ~ "Muslim", 
                             sd3 < 12 ~ "Other",
                             sd3 < 14 ~ "Atheist | Agnostic",
                             sd3 == 14 ~ "Other",
                             sd3 > 14 ~ "Don't know | Refusal")) 


```

```{r}
#| echo: false

df_descriptive <-
  df_descriptive |> 
  mutate(
    sd1_7_NA = car::recode(sd1_7, "1=1; 2=0; 3=NA; 4=2"),
    sd1_7_multinomial = factor(sd1_7_NA, levels = c(0, 1, 2), labels = c("No", "Yes", "Don't know"))
  )

```

```{r}
#| echo: false

df_descriptive$qc1_8_ordinal <- factor(df_descriptive$qc1_8, levels = c(1, 2, 3, 4 , 5, 6),labels = c("Very wide spread", "Fairly wide spread", "Fairly rare", "Very rare", "Nonexistent
", "DK"))

```

::: panel-tabset
## Cross Table

```{r}
#| echo: false


df_country_2 <-
  df_descriptive |> 
  mutate(qc1_8_ordinal = case_when(
    qc1_8_ordinal == "Very wide spread" ~ "Very or fairly wide spread",
    qc1_8_ordinal == "Fairly wide spread" ~ "Very or fairly wide spread",
    TRUE ~ qc1_8_ordinal
  )) |> 
  group_by(country_name) |> 
  summarize(
    prop_dis_wide = (sum(qc1_8_ordinal == "Very or fairly wide spread") / n())*100, # Calculate proportion with high education
    prop_qc19_yes = (sum(qc19 == 1) / n())*100)
```



```{r}
#| echo: false

df_descriptive <- 
  df_descriptive |>  
  mutate(
    sd2t = factor(sd2t, levels = c(0, 1), labels = c("Not mentioned", "Yes"))
  )
```

```{r}
#| echo: false

df_descriptive <- 
  df_descriptive |>  
  mutate(
    sd2_5 = factor(sd2_5, levels = c(0, 1), labels = c("Not mentioned", "Yes"))
  )
```

```{r}
#| echo: false

df_descriptive <- 
  df_descriptive |> 
  mutate(d8 = case_when(d8 < 98 ~ d8,
                        TRUE ~ NA)) # turning don't know and refusal into NA to keep continuous character of the variable - imputed later

```

## Share of Orthodox Christians


```{r}
#| echo: false


df_descriptive <- 
  df_descriptive |> 
  mutate(
    d60 = car::recode(d60, "4=NA"),
    d60_ordinal = factor(d60, levels = c(1, 2, 3), labels = c("Most of the time", "From time to time", "Almost never/ never"))
  )
```

```{r}
#| echo: false

df_descriptive <- 
  df_descriptive |> 
  mutate(
    qc15_1_ordinal = factor(qc15_1, levels = c(1, 2, 3, 4, 5), labels = c("Totally agree", "Tend to agree", "Tend to disagree", "Totally disagree", "Don't know"))
  )
```

```{r}
#| echo: false

df_country_3 <- 
  df_descriptive |>
  mutate(qc15_1_ordinal = case_when(
    qc15_1_ordinal == "Totally agree" ~ "Totally or tend to agree",
    qc15_1_ordinal == "Tend to agree" ~ "Totally or tend to agree",
    TRUE ~ qc15_1_ordinal
  )) |> 
  group_by(country_name) |> 
  summarize(
    prop_lgb_yes = (sum(qc15_1_ordinal == "Totally or tend to agree") / n())*100, # Calculate proportion with high education
    prop_qc19_yes = (sum(qc19 == 1) / n())*100)

```


```{r}
#| echo: false

df_descriptive$d25_multinominal <- factor(df_descriptive$d25, labels = c("Rural area", "Small and middle sized town", "Large town", "Don't know"))

# levels = c(1, 2, 3)
df_descriptive |> 
  group_by(country_name) |> 
  summarise(share = mean(sd3_cat == "Orthodox Christian", na.rm = TRUE)*100) |> 
  arrange(desc(share)) |> 
  mutate(country_name = factor(country_name, levels = country_name)) |>
  filter(country_name != "Otros países") |> 
ggplot(aes(x = country_name, y = share)) +
  geom_col(fill = "red") +
  labs(title = "Share of Orthodox Christians", 
       x = "",
       y = "",
       caption = "Source: Eurobarometer 91.4") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
        plot.margin = margin(0, 0, 0, 0))  +
  scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  geom_text((aes(label = sprintf("%.1f%%", share))),vjust = -0.5, size = 2)

```
:::

## Contact with transgender individuals

```{r}
#|echo: false

df_descriptive <-
  df_descriptive |> 
  mutate(
    sd1_7_NA = car::recode(sd1_7, "1=1; 2=0; 3=NA; 4=2"),
    sd1_7_multinomial = factor(sd1_7_NA, levels = c(0, 1, 2), labels = c("No", "Yes", "Don't know"))
  )

```

```{r}
#|echo: false

df_descriptive|> 
  drop_na(sd1_7_multinomial) |> 
  group_by(sd1_7_multinomial, qc19_multinominal) |> 
  summarise(count = n()) |> 
  ungroup() |> 
  group_by(sd1_7_multinomial) |> 
  mutate(share = count / sum(count) * 100) |>
  ungroup() |> 
  ggplot(aes(x = sd1_7_multinomial, y = share, fill = qc19_multinominal))+
  geom_bar(stat = "identity", position = "dodge")+
  geom_text((aes(label = sprintf("%.1f%%", share))), position = position_dodge(width = 0.9), vjust = -0.3, size = 3) +
  theme_minimal() +
  labs(title = "Support of change of gender in civil documents for transgender\npeople by previous conatct with transgender person",
       x = "Contact",
       y = "",
       caption = "Source: Eurobarometer 91.4")+
  theme(legend.position = "bottom",
        legend.title = element_blank()) +
  scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  scale_fill_brewer(palette = "Dark2")
```

## Age

```{r}
#| echo: false
anova <- aov(d11 ~ qc19_multinominal, data = df_descriptive)
summary(anova)
```

```{r}
#|echo: false

ggplot(df_descriptive, aes(x = qc19_multinominal, y = d11, fill = "red")) +
  geom_boxplot(color = "red") +
  theme_minimal() +
  labs(title = "Support of change of gender in civil documents\nfor transgender people",
       y = "Age",
       x = "Support",
       caption = "Source: Eurobarometer 91.4") +
  theme(legend.position = "none")
```

## Awareness of discrimination

::: panel-tabset
## Individual level

```{r}
#|echo: false

df_descriptive$qc1_8_ordinal <- factor(df_descriptive$qc1_8, levels = c(1, 2, 3, 4 , 5, 6),labels = c("Very wide spread", "Fairly wide spread", "Fairly rare", "Very rare", "Nonexistent
", "DK"))

df_descriptive|> 
  drop_na(qc1_8_ordinal) |> 
  group_by(qc1_8_ordinal, qc19_multinominal) |> 
  summarise(count = n()) |> 
  ungroup() |> 
  group_by(qc1_8_ordinal) |> 
  mutate(share = count / sum(count) * 100) |>
  ungroup() |> 
  ggplot(aes(x = qc1_8_ordinal, y = share, fill = qc19_multinominal))+
  geom_bar(stat = "identity", position = "dodge")+
  geom_text((aes(label = sprintf("%.1f%%", share))), position = position_dodge(width = 0.9), vjust = -0.3, size = 3) +
  theme_minimal() +
  labs(title = "Support of change of gender in civil documents for transgender\npeople by perceived discrimination transgender people face",
       x = "Contact",
       y = "",
       caption = "Source: Eurobarometer 91.4")+
  theme(legend.position = "bottom",
        legend.title = element_blank()) +
  scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  scale_fill_brewer(palette = "Dark2")
```

## Country level

```{r}
#| echo: true

df_country_2 <-
  df_descriptive |> 
  mutate(qc1_8_ordinal = case_when(
    qc1_8_ordinal == "Very wide spread" ~ "Very or fairly wide spread",
    qc1_8_ordinal == "Fairly wide spread" ~ "Very or fairly wide spread",
    TRUE ~ qc1_8_ordinal
  )) |> 
  group_by(country_name) |> 
  summarize(
    prop_dis_wide = (sum(qc1_8_ordinal == "Very or fairly wide spread") / n())*100, 
    prop_qc19_yes = (sum(qc19 == 1) / n())*100)


cor(df_country_2$prop_dis_wide, df_country_2$prop_qc19_yes, method = "spearman")
```
:::

## Sexual minority

```{r}
#| echo: false

df_descriptive <- 
  df_descriptive |>  
  mutate(
    sd2_5 = factor(sd2_5, levels = c(0, 1), labels = c("Not mentioned", "Yes"))
  )


df_descriptive|> 
  drop_na(sd2_5) |> 
  group_by(sd2_5, qc19_multinominal) |> 
  summarise(count = n()) |> 
  ungroup() |> 
  group_by(sd2_5) |> 
  mutate(share = count / sum(count) * 100) |>
  ungroup() |> 
  ggplot(aes(x = sd2_5, y = share, fill = qc19_multinominal))+
  geom_bar(stat = "identity", position = "dodge")+
  geom_text((aes(label = sprintf("%.1f%%", share))), position = position_dodge(width = 0.9), vjust = -0.3, size = 3) +
  theme_minimal() +
  labs(title = "Support of change of gender in civil documents for transgender\npeople by perceived discrimination transgender people face",
       x = "Contact",
       y = "",
       caption = "Source: Eurobarometer 91.4")+
  theme(legend.position = "bottom",
        legend.title = element_blank()) +
  scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  scale_fill_brewer(palette = "Dark2")
```

## Support for LGB rights

::: panel-tabset
## Individual level

```{r}
#| echo: false

df_descriptive <- 
  df_descriptive |> 
  mutate(
    qc15_1_ordinal = factor(qc15_1, levels = c(1, 2, 3, 4, 5), labels = c("Totally agree", "Tend to agree", "Tend to disagree", "Totally disagree", "Don't know"))
  )

CrossTable(df_descriptive$qc15_1_ordinal, df_descriptive$qc19_multinominal,
           digits=2, 
           expected=F, 
           asresid=T, 
           chisq=TRUE, 
           prop.chisq=F, 
           format="SPSS")
```

## Country level

```{r}
#| echo: true

df_country_3 <- 
  df_descriptive |>
  mutate(qc15_1_ordinal = case_when(
    qc15_1_ordinal == "Totally agree" ~ "Totally or tend to agree",
    qc15_1_ordinal == "Tend to agree" ~ "Totally or tend to agree",
    TRUE ~ qc15_1_ordinal
  )) |> 
  group_by(country_name) |> 
  summarize(
    prop_lgb_yes = (sum(qc15_1_ordinal == "Totally or tend to agree") / n())*100, 
    prop_qc19_yes = (sum(qc19 == 1) / n())*100)


cor(df_country_3$prop_lgb_yes, df_country_3$prop_qc19_yes, method = "spearman")
```
:::

## Legal protections

::: panel-tabset
## Overview

```{r}
#| echo: false

df <- df_descriptive %>% 
  select(country_name, adp_general)
df$country_name <- as.character(df$country_name)

df_unique <- df %>%
  group_by(country_name) %>%
  summarise(adp_general = max(adp_general)) %>%
  ungroup()

europe_map <- ne_countries(scale = "medium", continent = "europe", returnclass = "sf")

df_joined <- left_join(europe_map, df_unique, by = c("sovereignt" = "country_name"))

df_joined$status <- case_when(
  df_joined$adp_general == 1 ~ "General",
  df_joined$adp_general == 0 ~ "None",
  TRUE ~ "No Information"
)

df_plot <- df_joined %>% 
  select(sovereignt, status)

df_plot <- na.omit(df_plot)

pal <- colorFactor(c("#2ca02c", "#377eb8", "#d62728"), domain = df_plot$status)

plot <- leaflet(df_plot) %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
  addPolygons(fillColor = ~pal(status),
              color = "black",
              fillOpacity = 0.7,
              weight = 1,
              popup = ~paste(sovereignt, status)) %>%
  addLegend(pal = pal, values = ~status,
            title = "Status",
            position = "bottomright")
plot
```

## Statistical association

```{r}
CrossTable(df_descriptive$adp_general, df_descriptive$qc19_multinominal,
           digits=2, 
           expected=F, 
           asresid=T, 
           chisq=TRUE, 
           prop.chisq=F, 
           format="SPSS")
```
:::

## Statistical Modeling

**Dependent Variable (qc19)**

It relates to this question:

*Do you think that transgender persons should be able to change their civil documents to match their inner gender identity?*

We will take the values:

-   1 for "Yes"

-   2 for "No"

```{r}
#| echo: false

df_descriptive <- df_descriptive %>%
  mutate(binary_qc19 = ifelse(qc19 == 1, 1, 
                              ifelse(qc19 == 2, 0, NA)))
# there are 3280 NA's

Individual_data <- df_descriptive %>%
  select(serialid,country_name, binary_qc19)
```

```{r}
#| echo: false

df_descriptive <- df_descriptive %>%
  mutate(
    male = car::recode(d10, "2=0; 1=1")
  )

Individual_data <- left_join(Individual_data, df_descriptive %>% select(serialid, male), by = "serialid")

Individual_data$male <- as.numeric(as.character(Individual_data$male))

```

```{r}
#| echo: false

df_descriptive <- df_descriptive %>%
  mutate(
    Cat_age_four = factor(d11r1, 
                           labels = c("15 - 24", "25 - 39", "40 - 54", ">=55")),
    Cat_age_six = factor(d11r2, 
                           labels = c("15 - 24", "25 - 34", "35 - 44", "45 - 54", "55 - 64", ">=65")),
    Cat_age_seven = factor(d11r3, 
                           labels = c("15 - 24", "25 - 34", "35 - 44", "45 - 54", "55 - 64", "65 - 74", ">=75"))
  )


Individual_data <- left_join(Individual_data, df_descriptive %>% select(serialid, Cat_age_four,Cat_age_six,Cat_age_seven), by = "serialid")
```

```{r}
#| echo: false

Individual_data <- left_join(Individual_data, df_descriptive %>% select(serialid, d11), by = "serialid")

Individual_data$d11 <- as.numeric(as.character(Individual_data$d11))
```

```{r}
#| echo: false

df_descriptive$d1_ordinal <- relevel(df_descriptive$d1_ordinal, ref = "Left") 
df_descriptive$d1_ordinal[df_descriptive$d1_ordinal %in% c("Non-response", "Don't know", 98)] <- NA

df_descriptive$d1_ordinal <- factor(df_descriptive$d1_ordinal)

df_descriptive <- df_descriptive %>% 
  rename(political_ideology = d1_ordinal) 

Individual_data <- left_join(Individual_data, df_descriptive %>% select(serialid, political_ideology), by = "serialid")



```

```{r}
#| echo: false

df_descriptive <- df_descriptive %>%
  mutate(Religion_cat = case_when(
    sd3_cat == "Catholic" ~ "Catholic",
    sd3_cat == "Orthodox Christian" ~ "Orthodox Christian",
    sd3_cat == "Protestant" ~ "Protestant",
    sd3_cat == "Other Christian" ~ "Other Christian",
    sd3_cat == "Jewish" ~ "Jewish",
    sd3_cat == "Muslim" ~ "Muslim", 
    sd3_cat == "Other" ~ "Other Religion",
    sd3_cat == "Atheist | Agnostic" ~ "Atheist | Agnostic",
    sd3_cat == "Other" ~ "Other Belief",
    TRUE ~ "Other"
  ))

Individual_data <- left_join(Individual_data, df_descriptive %>% select(serialid, Religion_cat), by = "serialid")

Individual_data$Religion_cat <- factor(Individual_data$Religion_cat)

```

```{r}
#| echo: false

df_descriptive <- df_descriptive %>%
  mutate(sd1_7_factor = factor(sd1_7, 
              levels = c(1, 2, 3, 4),
              labels = c("Yes", "No", "Refusal (SPONTANEOUS)", "Don't know")))

Individual_data <- left_join(Individual_data, df_descriptive %>% select(serialid, sd1_7_factor), by = "serialid")

```

```{r}
#| echo: false

df_descriptive <- df_descriptive %>%
  mutate(age_stopped_education = case_when(
    d8 == 98 ~ NA_real_,  # Refusal treated as missing
    d8 == 99 ~ NA_real_,  # Don't know treated as missing
    d8 == 00 ~ NA_real_,  # Still Studying can be treated as missing or given a special code
    d8 == 01 ~ NA_real_,  # No Education can be treated as missing or given a special code
    TRUE ~ as.numeric(d8) # Convert all other responses to numeric
  ))



Individual_data <- left_join(Individual_data, df_descriptive %>% select(serialid, age_stopped_education), by = "serialid")

```

```{r}
#| echo: false

Individual_data <- left_join(Individual_data, df_descriptive %>% select(serialid, d60_ordinal), by = "serialid")

```

```{r}
#| echo: false

Individual_data <- left_join(Individual_data, df_descriptive %>% select(serialid, sd2_5), by = "serialid")

```

```{r}
#| echo: false

df_descriptive <- df_descriptive %>%
  mutate(area_type = factor(d25, 
                                levels = c(1, 2, 3, 4),
                                labels = c("Rural area or village", 
                                           "Small or middle-sized town", 
                                           "Large town", 
                                           "Don't know")))


Individual_data <- left_join(Individual_data, df_descriptive %>% select(serialid, area_type), by = "serialid")

```

```{r}
#| echo: false

Individual_data <- left_join(Individual_data, df_descriptive %>% select(serialid, qc15_1_ordinal), by = "serialid")

```

```{r}
#| echo: false

Country_level <- reduce(list(df_country_1 %>% select(-prop_qc19_yes), 
                             df_country_2 %>% select(-prop_qc19_yes), 
                             df_country_3 %>% select(-prop_qc19_yes)), 
                        full_join, by = "country_name")


Country_level$prop_gndr_bin <- Country_level$prop_gndr_bin / 100
Country_level$prop_lgb_yes <- Country_level$prop_lgb_yes / 100
Country_level$prop_dis_wide <- Country_level$prop_dis_wide / 100

```

```{r}
#| echo: false

Country_level <- left_join(Country_level, df_descriptive %>% 
  select(country_name, trans_legal_protection = adp_general) %>% 
  distinct(), by = "country_name")

```

```{r}
#| echo: false

Country_level <- left_join(Country_level, df_descriptive %>% 
  select(country_name, Unemployment = `Unemployment. total (% of total labor force) (modeled ILO estimate)`) %>% 
  distinct(), by = "country_name")

```

```{r}
#| echo: false

Country_level <- left_join(Country_level, df_descriptive %>% 
  select(country_name, Gdp_per_capita = `GDP per capita (current US$)`) %>% 
  distinct(), by = "country_name")

```

```{r}
#| echo: false

Data_final_Cntry <- Country_level |>
   select(country_name,prop_gndr_bin, prop_dis_wide,prop_lgb_yes, trans_legal_protection, Gdp_per_capita, Unemployment)
```

```{r}
#| echo: false

Data_final_Ind <- Individual_data |> 
  select(serialid,country_name,binary_qc19,male, d11, Cat_age_four,Cat_age_six, Cat_age_seven,political_ideology,Religion_cat , sd1_7_factor, age_stopped_education, d60_ordinal,sd2_5,area_type,qc15_1_ordinal)

```

## 

-   Once we had our variables confirmed from the descriptive analysis we moved to model these variables using a hierarchical (multilevel) logistic regression modeling.
-   We checked for missing data again, and we considered imputing the age_stopped_education variable because of the variables containing missing data, it made the most sense. We tested this out to see if it would help with the significance of the variable in the upcoming models, however failed to make a difference ultimately.

```{r}
#| echo: true

summary(is.na(Data_final_Ind))
```

```{r}
#| echo: false

library(mice)
library(cowplot)
library(missForest)

```

```{r}
#| echo: false

df_age <- data.frame(
  age_stopped_education = Data_final_Ind$age_stopped_education,
  serialid = Data_final_Ind$serialid
)

methods <- c(age_stopped_education = "pmm", serialid = "")  

# Imputation using PMM
imputed_data_pmm <- mice(df_age, m = 5, method = methods, seed = 123)
imputed_pmm <- complete(imputed_data_pmm, action = 1)$age_stopped_education

# Change method to CART for age_stopped_education
methods["age_stopped_education"] <- "cart"
imputed_data_cart <- mice(df_age, m = 5, method = methods, seed = 123)
imputed_cart <- complete(imputed_data_cart, action = 1)$age_stopped_education

# Change method to LASSO for age_stopped_education
methods["age_stopped_education"] <- "lasso.norm"
imputed_data_lasso <- mice(df_age, m = 5, method = methods, seed = 123)
imputed_lasso <- complete(imputed_data_lasso, action = 1)$age_stopped_education

# Change method to RANDOMFOREST for age_stopped_education
methods["age_stopped_education"] <- "rf"
imputed_data_rf <- mice(df_age, m = 5, method = methods, seed = 123)
imputed_rf <- complete(imputed_data_rf, action = 1)$age_stopped_education

# Combine the original and imputed values into a single data frame for comparison
mice_imputed <- data.frame(
  serialid = df_age$serialid,
  original = df_age$age_stopped_education,
  imputed_pmm = imputed_pmm,
  imputed_cart = imputed_cart,
  imputed_lasso = round(imputed_lasso),  
  imputed_rf = imputed_rf  

  )

```

```{r}
#| echo: true

# Define variables, titles, and colors for the updated set of distributions
variables <- c("original", "imputed_pmm", "imputed_cart", "imputed_lasso","imputed_rf")
titles <- c("Original distribution", "PMM-imputed distribution", "Cart-imputed distribution", "Lasso-imputed distribution", "Random Forest Imputed Distribution")
colors_fill <- c("#fa9fb5", "#67a9cf", "#807dba", "#fd8d3c","#74c476")
colors_border <- c("#ae017e", "#02818a", "#54278f", "#e31a1c","#006d2c")

# Initialize an empty plot list for the new plots
plots <- list()

# Loop through the updated variables to create plots
# Loop through the updated variables to create plots with an adjusted binwidth
for (i in 1:length(variables)) {
  plots[[i]] <- ggplot(mice_imputed, aes_string(x = variables[i])) +
    geom_histogram(binwidth = 3, fill = colors_fill[i], color = colors_border[i], position = "identity") +
    ggtitle(titles[i]) +
    theme_classic()
}

# Combine the new set of plots into a grid
plot_grid(plotlist = plots, nrow = 3, ncol = 2)
```

The best imputation method seem to be PMM-Imputed distribution.

```{r}
#| echo: false

Data_final_Ind <- Data_final_Ind %>%
  left_join(mice_imputed %>% select(serialid, imputed_pmm), by = "serialid")
```

```{r}
#| echo: false

Data_final_Ind$age_stopped_education <- ifelse(is.na(Data_final_Ind$age_stopped_education), 
                                               Data_final_Ind$imputed_pmm, 
                                               Data_final_Ind$age_stopped_education)

Data_final_Ind <- Data_final_Ind %>% select(-imputed_pmm)

```

```{r}
#| echo: false

data_reg_ind <- Data_final_Ind |> 
  select(binary_qc19,male, d11 ,political_ideology,Religion_cat , sd1_7_factor, age_stopped_education, d60_ordinal,sd2_5,area_type,qc15_1_ordinal)


data_reg_ind = data_reg_ind %>%
  filter(!is.na(binary_qc19))
```

### Multi-level analysis

In order to do a multi-leveled analysis we are going to take generalized linear mixed-effects model (GLMM), where country_name will be the variable used as the random effects.

```{r}
#| echo: false

Data <- left_join(Data_final_Ind, Data_final_Cntry, by = "country_name")

#taking logs of GDP per capita
Data$Gdp_per_capita_log <- log(Data$Gdp_per_capita)

```

```{r}
#| echo: false

test_model <- glm(binary_qc19 ~ male + d11 + political_ideology +
                    Religion_cat + sd1_7_factor + d60_ordinal + qc15_1_ordinal +
                    prop_gndr_bin + prop_lgb_yes + trans_legal_protection +
                    Gdp_per_capita_log + Unemployment,
                  data = Data, family = binomial)

vif_values <- vif(test_model)
print(vif_values)
```

```{r}
#| echo: true

glm_model_2 <- glmer(binary_qc19 ~ male + d11 + I(d11^2) + political_ideology +
               Religion_cat + sd1_7_factor + d60_ordinal + qc15_1_ordinal +
               prop_gndr_bin + prop_dis_wide + Unemployment + (1 | country_name),
               data = Data, family = binomial, 
               control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 100000)))
summary(glm_model_2)
```

The model is clearly overfitted. And it suggests we have scaling issue. We fix this and move to remove the non-significant variables.

```{r}
#| echo: false

Data$d11 <- scale(Data$d11, center = TRUE, scale = TRUE)
Data$Gdp_per_capita_log <- scale(Data$Gdp_per_capita_log, center = TRUE, scale = TRUE)
Data$Unemployment <- scale(Data$Unemployment, center = TRUE, scale = TRUE) 

```

```{r}
#| echo: false

glm_model_3 <- glmer(binary_qc19 ~ male + d11 + I(d11^2) + political_ideology +
               Religion_cat + sd1_7_factor + d60_ordinal + qc15_1_ordinal +
               prop_gndr_bin + prop_lgb_yes + prop_dis_wide + trans_legal_protection +
               Gdp_per_capita_log + Unemployment + (1 | country_name),
               data = Data, family = binomial, 
               control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 100000)))
summary(glm_model_3)
```

```{r}
#| echo: false

glm_model_4 <- glmer(binary_qc19 ~ male + d11 + I(d11^2) + political_ideology +
               Religion_cat + sd1_7_factor + d60_ordinal + qc15_1_ordinal +
               prop_gndr_bin + prop_dis_wide + Unemployment + (1 | country_name),
               data = Data, family = binomial, 
               control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 100000)))
summary(glm_model_4)
```

```{r}
#| echo: true

library(stargazer)
stargazer(glm_model_4, type = "text", title = "Results of GLMM Analysis", out = "model_results.html")

```

We compared some models with different transformations and different variables and end up with the best model, to this one above with following results:

```{r}
#| echo: true

AIC(glm_model_4)
BIC(glm_model_4)
#glm_model_4 seems to show the besT lowest AIC and BIC
```

```{r}
#| echo: true

plot(residuals(glm_model_4, type = "pearson"))
```

There's a large cluster of residuals around zero, which is not unexpected for binary data. We continue with the analysis.

**Q-Q plot for the standardized residuals**

```{r}
#| echo: true

qqmath(~ resid(glm_model_4, type = "pearson"), distribution = qnorm,
       main = "Q-Q Plot of Pearson Residuals", xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
```

We do not see any systematic deviations that could indicate model misspecification. The Q-Q plot shows the residuals are not perfectly normally distributed, which is common and expected pattern for a logistic regression.

## Key Findings - Demographics and Beliefs

-   **Gender Influence**: Females show higher odds of support compared to males, potentially reflecting societal gender roles and perceptions.

-   **Age Dynamics**: Support increases with age up to a point, then declines, suggesting life experiences or generational shifts might influence attitudes toward inclusivity.

-   **Political Ideology**: Conservative alignment correlates with less support for transgender individuals' rights to change civil documents, showing a 22.8% decrease in support.

-   **Religious Impact**: Catholic individuals show 21.2% less support, while Jewish individuals are slightly more supportive, though the latter group is smaller in the dataset.

## Key Findings - Social and Economic Factors

-   **Economic Stability**: Individuals with no difficulty paying bills are more supportive, linking economic security with supportive attitudes.

-   **Contact with Transgender Individuals**: Lack of contact is associated with a 45.5% decrease in support, highlighting the importance of visibility and personal relationships.

-   **Sexual Minority and Support**: Non-members of sexual minorities are less supportive of transgender rights for document changes.

-   **Country-Level Factors**: General support for a third gender option and awareness of discrimination correlate with supportive attitudes. Higher unemployment rates within a country are unexpectedly associated with more support.

## Conclusion

-   **Cross-Country Differences**: Variations in support for transgender rights across countries are influenced by demographics (gender, age), political and religious affiliations, social determinants, awareness of LGBTI issues, and economic conditions.


-   Model

-   we didnt put it because, our assumption is that individual level variables also explain cross country differences because demographics are different across countries
-   but because individual level variables

## Prediction

We aim to build a model to predict support for transgender individuals to change legal documents.

`Model = binary_qc19 ~ male + d11 + I(d11^2) + political_ideology + Religion_cat + sd1_7_factor + d60_ordinal + qc15_1_ordinal + Unemployment + prop_gndr_bin + prop_dis_wide`

```{r}
#| echo: false
#| output: false

ModelS = binary_qc19 ~ male + d11 + I(d11^2)  + political_ideology + Religion_cat + sd1_7_factor + d60_ordinal + qc15_1_ordinal + Unemployment + prop_gndr_bin + prop_dis_wide

data_pred <- left_join(Data_final_Ind, Data_final_Cntry, by = "country_name")

data_pred <- data_pred |> 
  filter(!is.na(binary_qc19))

data_pred$prop_gndr_bin <- data_pred$prop_gndr_bin / 100
data_pred$prop_dis_wide <- data_pred$prop_dis_wide / 100
set.seed(123)

#we move to split the data into testing and training with a 80% split.

in_train <- createDataPartition(y = data_pred$binary_qc19, p = 0.8, list = FALSE)

in_train <- in_train[, 1]

training <- data_pred[in_train, ]
testing <- data_pred[-in_train, ]

#remove rows with NA's
training <- na.omit(training)
testing <- na.omit(testing)
# defining the levels of our dependent variable
training$binary_qc19 <- factor(training$binary_qc19, levels = c(0, 1), labels = c("No", "Yes"))

testing$binary_qc19 <- factor(testing$binary_qc19, levels = c(0, 1), labels = c("No", "Yes"))
# we first need to correct the factor levels to be able to run the predictive model

# For political_ideology
levels(training$political_ideology) <- make.names(levels(training$political_ideology), unique = TRUE)
levels(testing$political_ideology) <- make.names(levels(testing$political_ideology), unique = TRUE)
# For Religion_cat
levels(training$Religion_cat) <- make.names(levels(training$Religion_cat), unique = TRUE)
levels(testing$Religion_cat) <- make.names(levels(testing$Religion_cat), unique = TRUE)
# For sd1_7_factor
levels(training$sd1_7_factor) <- make.names(levels(training$sd1_7_factor), unique = TRUE)
levels(testing$sd1_7_factor) <- make.names(levels(testing$sd1_7_factor), unique = TRUE)
# For qc15_1_ordinal
levels(training$qc15_1_ordinal) <- make.names(levels(training$qc15_1_ordinal), unique = TRUE)
levels(testing$qc15_1_ordinal) <- make.names(levels(testing$qc15_1_ordinal), unique = TRUE)
# For d60_ordinal
levels(training$d60_ordinal) <- make.names(levels(training$d60_ordinal), unique = TRUE)
levels(testing$d60_ordinal) <- make.names(levels(testing$d60_ordinal), unique = TRUE)

library(doParallel)
numCores <- detectCores() - 1
registerDoParallel(cores=numCores)
ctrl <- trainControl(method = "repeatedcv", 
                     number = 10,
                     repeats = 1,
                     classProbs = TRUE,
                     summaryFunction = twoClassSummary,
                     verboseIter = FALSE,
                     allowParallel = TRUE) # allowing for the parallel processing


# custom grid to make the computational process run within less than 8 hours, we tune in each parameter and found this one where the optimal onces.
tune_grid_gbm <- expand.grid(
    nrounds = c(100, 600),  
    max_depth = 4,          
    eta = 0.05,     
    gamma = 0,              
    colsample_bytree = 0.8, 
    min_child_weight = 1,   
    subsample = 0.8         
)
 

set.seed(456)

# Update the train function call to use the new tune grid
gbmFit <- train(ModelS, 
                data = training,
                method = "xgbTree",
                preProc = c('scale', 'center'),
                tuneGrid = tune_grid_gbm,
                metric = "ROC",
                trControl = ctrl)

gbmProb = predict(gbmFit, testing, type="prob")
rocObj <- roc(response = testing$binary_qc19, predictor = gbmProb[,"Yes"])
plot(rocObj, col="red", print.thres = TRUE)
prediction <- as.factor(ifelse(gbmProb[,"Yes"] > 0.603, "Yes", "No"))
```

## Gradient boosting

```{r}
confusionMatrix(prediction, testing$binary_qc19)
```

## Variables Importance

```{r}
gbm_imp <- varImp(gbmFit, scale = F)
plot(gbm_imp, scales = list(y = list(cex = .95)))
```

## Partial dependence plot

```{r}
partial(gbmFit, pred.var = "prop_gndr_bin", plot = TRUE, rug = TRUE)
```

## ROC Curve

```{r}
rocObj <- roc(response = testing$binary_qc19, predictor = gbmProb[,"Yes"])
plot(rocObj, print.auc = TRUE)
```

## Final Predictive Model

The selected predictive model for our international analysis is Gradient Boosting (GB).

GB not only has one of the highest Accuracy levels but also achieves the most balanced rates of Specificity and Sensitivity. Such a robust performance profile makes it the optimal choice for our data set.

We found that this model, is the most adept and effective at predicting whether countries will support the right of transgender individuals to change their civil documents.

# THANK YOU!

